/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;
import io.github.stefanbratanov.jvm.openai.*;
import io.github.cdimascio.dotenv.Dotenv;
import java.util.ArrayList;
import java.util.List;

public class ChatService {
    private static final Dotenv dotenv = Dotenv.configure()
            .directory(System.getProperty("user.dir"))
            .load();

    public String callOpenAi(List<String> previousMessages, String userMessage){
        var apiKey = dotenv.get("OPENAI_API_KEY");
        var builder = OpenAI.newBuilder(apiKey);
        OpenAI openAI = builder.build();
        ChatClient chatClient = openAI.chatClient();
        List<ChatMessage> chatMessages = new ArrayList<>();
        for (String previousMessage : previousMessages) {
            chatMessages.add(ChatMessage.userMessage(previousMessage));
        }
        chatMessages.add(ChatMessage.userMessage(userMessage));

        CreateChatCompletionRequest createChatCompletionRequest = CreateChatCompletionRequest.newBuilder()
                .model("gpt-3.5-turbo")
                .messages(chatMessages)
                .build();

        ChatCompletion chatCompletion = chatClient.createChatCompletion(createChatCompletionRequest);
        var choices = chatCompletion.choices();
        return choices.iterator().next().message().content();
    }
}
